Datenformat:

assembly.zip
   tree.json
   steps
      1
	 instructions.json/html
	 unityObjects.json
	 matrixes
	    1
	       1.npy
	       2.npy
	       3.npy
	       4.npy
	       ...
	       100.npy
	    2
	    3
	    4
	    5
		
	



Beispiele auswählen und bereitstellen
see unity project




Feature Liste schrieben

Feature List:

1.	Python script:
Eingabe: Ordner mit einem .obj File pro Datei

-	Erstellt einen Assembly Graphen 
-	Erstellt für jeden Assembly Schritt (Kanten des Assembly Graphen) einen Order mit Transformationsmatrixen via Assemble-them-all.

Ausgabe:  Assembly tree und Transformationsmatrixen gemäß dem beschriebenen Dateiformat

2.	Unity Programm
Eingabe: ZIP-Datei wie beschrieben

-	erlaubt die Auswahl eines Grundteiles (Anfangsteil)
-	Fängt an mit leerem Bildschirm oder Grundteil falls vorhanden und erlaubt die Auswahl eines beliebigen Teiles, welches eingebaut werden soll (per Hologramm oder Liste)
-	Zeigt nach Auswahl des Teiles eine Animation wie dieses Teil eingebaut wird
-	Erlaubt nun die Auswahl eines weiteren Teil.
-	Möglichkeit Text, Bilder und Videos zu jedem Schritt hinzuzufügen. Speichert die hinzugefügten Sachen in instructions.json von dem Schritt.
-	Möglichkeit Unity Objekte zu jedem Schritt hinzuzufügen. Speichert die hinzugefügten Unity- Objekte im entsprechenden Schritt  in unityObjects.json
-	Schritte rückgängig machen
-	Geschwindigkeit ändern
-	Kamera bewegen und drehen


Ausgabe: ZIP-Datei mit hinzugefügten Instructions.json und unityObjects.json


Screenshots ?